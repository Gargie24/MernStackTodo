[{"C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\reportWebVitals.js":"2","C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\App.js":"3","C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\components\\Login.jsx":"4","C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\components\\Register.jsx":"5","C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\components\\Home.jsx":"6","C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\components\\partials\\Header.jsx":"7","C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\services\\api.js":"8","C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\components\\partials\\AddTodoModal.jsx":"9","C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\components\\partials\\Todo.jsx":"10","C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\services\\apiConstants.js":"11","C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\config.js":"12"},{"size":582,"mtime":1695886430001,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1695813563276,"results":"15","hashOfConfig":"14"},{"size":737,"mtime":1695873671448,"results":"16","hashOfConfig":"14"},{"size":3530,"mtime":1695963809568,"results":"17","hashOfConfig":"14"},{"size":4815,"mtime":1695963815719,"results":"18","hashOfConfig":"14"},{"size":2469,"mtime":1696315540878,"results":"19","hashOfConfig":"14"},{"size":2351,"mtime":1696315862465,"results":"20","hashOfConfig":"14"},{"size":1608,"mtime":1696309282784,"results":"21","hashOfConfig":"14"},{"size":2007,"mtime":1695971219371,"results":"22","hashOfConfig":"14"},{"size":3729,"mtime":1696316997205,"results":"23","hashOfConfig":"14"},{"size":417,"mtime":1696309271346,"results":"24","hashOfConfig":"14"},{"size":46,"mtime":1695858031763,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1btzhrm",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\index.js",[],[],["68"],"C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\App.js",["69","70"],[],"import Header from \"./components/partials/Header.jsx\";\nimport './App.css';\nimport {BrowserRouter,Routes,Route} from 'react-router-dom';\nimport Home from \"./components/Home.jsx\";\nimport Login from \"./components/Login.jsx\";\nimport Register from \"./components/Register.jsx\";\nimport {useState} from \"react\";\nfunction App() {\n  // const info = localStorage.getItem('user');\n  // const[user,setUser] = useState(JSON.parse(info))\n  return (\n    <>\n     <BrowserRouter>\n     {/*<Header/> */}\n     <Routes>\n      <Route path = \"/\" element = {<Home/>} />\n      <Route path = \"/register\" element = {<Register/>} />\n      <Route path = \"/login\" element = {<Login/>} />\n     </Routes>\n     \n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\components\\Login.jsx",["71","72"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { login } from \".././services/api.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Header from \"./partials/Header\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nfunction Login() {\r\n  const [form, setForm] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const navigation = useNavigate();\r\n  useEffect(() => {\r\n    const user = localStorage.getItem(\"user\");\r\n    if (user) {\r\n      return navigation(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  const [errors, setErrors] = useState(null);\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n  <ToastContainer />;\r\n  const handleSubmit = async () => {\r\n    console.log(form);\r\n    const result = await login(form);\r\n    console.log(\"form\", result);\r\n    setErrors(null);\r\n\r\n    if (result.status === 200) {\r\n      if (result.data.status === 200) {\r\n        localStorage.setItem(\"user\", JSON.stringify(result.data.data));\r\n        navigation(\"/\");\r\n\r\n        return;\r\n      }\r\n      if (result.data.status === 200) {\r\n        setErrors(result.data.data);\r\n        return;\r\n      }\r\n\r\n      if (result.data.status == 202) {\r\n        toast(result.data.message);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center mt-4\">\r\n          <div className=\"col-lg-5 card border-primary mt-4\">\r\n            <div className=\"card-header\"></div>\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">Login Now</h4>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\" className=\"form-label mt-4\">\r\n                  Email or username\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  onChange={handleChange}\r\n                  name=\"username\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputEmail1\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  placeholder=\"Enter email or username\"\r\n                />\r\n                {errors?.username && (\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                    {errors.username.message}\r\n                  </small>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\" className=\"form-label mt-4\">\r\n                  password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  onChange={handleChange}\r\n                  name=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputEmail1\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  placeholder=\"Enter your password\"\r\n                />\r\n                {errors?.password && (\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                    {errors.password.message}\r\n                  </small>\r\n                )}\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleSubmit}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Login\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\components\\Register.jsx",["73"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { register } from \".././services/api.js\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Header from \"./partials/Header\";\r\nfunction Register() {\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState(null);\r\n  const navigation = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const user = localStorage.getItem(\"user\");\r\n    if (user) {\r\n      return navigation(\"/\");\r\n    }\r\n  }, []);\r\n  const handleInputChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = async () => {\r\n    // console.log(form);\r\n    const result = await register(form);\r\n    console.log(result);\r\n\r\n    if (result.status === 200) {\r\n      if (result.data.status === 201) {\r\n        setErrors(result.data.data);\r\n        toast(result.data.message);\r\n        return;\r\n      }\r\n\r\n      if (result.data.status === 200) {\r\n        localStorage.setItem(\"user\", JSON.stringify(result.data.data));\r\n        navigation(\"/\");\r\n        return;\r\n      }\r\n      if (result.data.status === 202) {\r\n        toast(result.data.message);\r\n        return;\r\n      }\r\n    } else {\r\n      toast(\"something went srong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div>\r\n        <div className=\"container\">\r\n          <ToastContainer />\r\n          <div className=\"row justify-content-md-center mt-4\">\r\n            <div className=\"col-lg-5 card border-primary mb-3\">\r\n              <div className=\"card header h4 text-center\">\r\n                Register an account\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"form-group\">\r\n                  <label className=\" col-form-label mt-4\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    onChange={handleInputChange}\r\n                    className=\"form-control\"\r\n                    placeholder=\"enter your name\"\r\n                  />\r\n\r\n                  {errors?.name && (\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                      {errors.name.message}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\" col-form-label mt-4\">Username</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    onChange={handleInputChange}\r\n                    className=\"form-control\"\r\n                    placeholder=\"enter your username\"\r\n                  />\r\n                  {errors?.username && (\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                      {errors.username.message}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label className=\" col-form-label mt-4\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={handleInputChange}\r\n                    className=\"form-control\"\r\n                    placeholder=\"enter your email\"\r\n                  />\r\n                  {errors?.email && (\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                      {errors.email.message}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label className=\" col-form-label mt-4\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={handleInputChange}\r\n                    className=\"form-control\"\r\n                    placeholder=\"enter your password\"\r\n                  />\r\n                  {errors?.password && (\r\n                    <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                      {errors.password.message}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n                <div className=\"row justfiy-content-md-center form-group mt-4\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={handleSubmit}\r\n                    className=\"col-sm-6 btn btn-outline-secondary center\"\r\n                  >\r\n                    Register Now\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\components\\Home.jsx",["74","75"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./partials/Header\";\r\nimport Todo from \"./partials/Todo\";\r\nimport AddTodoModal from \"./partials/AddTodoModal\";\r\nimport { getToken } from \"../services/api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getTodoListApi } from \"../services/api\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nfunction Home() {\r\n  const navigation = useNavigate();\r\n  const [completedList, setCompletedList] = useState([]);\r\n  const [notCompletedList, setNotCompletedList] = useState([]);\r\n  const [refreshList, setRefreshList] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!getToken()) {\r\n      navigation(\"/login\");\r\n    }\r\n    fetchTodoList();\r\n  }, [refreshList]);\r\n\r\n  async function fetchTodoList() {\r\n    const result = await getTodoListApi();\r\n    console.log(\"todolist\", result);\r\n    if (result.status === 200 && result.data.status === 200) {\r\n      const todos = result.data.data.todos;\r\n      const completedTodos = todos.filter((todo) => todo.isCompleted);\r\n      const notCompletedTodos = todos.filter((todo) => !todo.isCompleted);\r\n      setCompletedList(completedTodos);\r\n      setNotCompletedList(notCompletedTodos);\r\n    }\r\n  }\r\n\r\n  const allTodosCompleted = notCompletedList.length === 0;\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <ToastContainer />\r\n      <div className=\"container\">\r\n        <h2>Completed Todos</h2>\r\n        <div className=\"row justify-content-md-center mt-4\">\r\n          {completedList.map((todo) => (\r\n            <Todo key={todo._id} {...todo} setRefreshList={setRefreshList} />\r\n          ))}\r\n        </div>\r\n        {allTodosCompleted ? (\r\n          <div className=\"motivational-message\">\r\n            <p>Hurray! You've completed all your tasks for the day.</p>\r\n            {/* You can add more motivational content here */}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h2>Not Completed Todos</h2>\r\n            <div className=\"row justify-content-md-center mt-4\">\r\n              {notCompletedList.map((todo) => (\r\n                <Todo key={todo._id} {...todo} setRefreshList={setRefreshList} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div\r\n        className=\"\"\r\n        style={{ position: \"fixed\", right: 50, bottom: 50, zIndex: 1030 }}\r\n      >\r\n        <AddTodoModal setRefreshList={setRefreshList} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\components\\partials\\Header.jsx",["76","77"],[],"import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction Header() {\r\n  const Navigation = useNavigate();\r\n  const [user, setUser] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    const u = localStorage.getItem(\"user\");\r\n    setUser(u);\r\n  }, []);\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    Navigation(\"/login\");\r\n  };\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          TODO APP\r\n        </a>\r\n\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarColor04\"\r\n          aria-controls=\"navbarColor04\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarColor04\">\r\n          <ul className=\"navbar-nav me-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" to=\"/\">\r\n                Home\r\n                <span className=\"visually-hidden\">(current)</span>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/login\">\r\n                Login\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/register\">\r\n                Register\r\n              </Link>\r\n            </li>\r\n            {user && (\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" onClick={handleLogout}>\r\n                  Logout\r\n                </a>\r\n              </li>\r\n            )}\r\n          </ul>\r\n          {/* {\r\n            user &&  <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-sm-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n\r\n            />\r\n            <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n          } */}\r\n         \r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\services\\api.js",[],[],"C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\components\\partials\\AddTodoModal.jsx",[],[],"C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\components\\partials\\Todo.jsx",["78"],[],"C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\services\\apiConstants.js",[],[],"C:\\Users\\HP\\Desktop\\Mern todo App\\client\\src\\config.js",[],[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":14},{"ruleId":"81","severity":1,"message":"85","line":7,"column":9,"nodeType":"83","messageId":"84","endLine":7,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":19,"column":6,"nodeType":"88","endLine":19,"endColumn":8,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":44,"column":30,"nodeType":"92","messageId":"93","endLine":44,"endColumn":32},{"ruleId":"86","severity":1,"message":"87","line":22,"column":6,"nodeType":"88","endLine":22,"endColumn":8,"suggestions":"94"},{"ruleId":"81","severity":1,"message":"95","line":8,"column":26,"nodeType":"83","messageId":"84","endLine":8,"endColumn":31},{"ruleId":"86","severity":1,"message":"87","line":21,"column":6,"nodeType":"88","endLine":21,"endColumn":19,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":20,"column":9,"nodeType":"99","endLine":20,"endColumn":46},{"ruleId":"97","severity":1,"message":"100","line":55,"column":17,"nodeType":"99","endLine":55,"endColumn":64},{"ruleId":"81","severity":1,"message":"101","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":24},"no-new-object",["102"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigation'. Either include it or remove the dependency array.","ArrayExpression",["103"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["104"],"'toast' is defined but never used.",["105"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'ToastContainer' is defined but never used.","no-object-constructor",{"desc":"106","fix":"107"},{"desc":"106","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [navigation]",{"range":"111","text":"112"},{"range":"113","text":"112"},"Update the dependencies array to be: [navigation, refreshList]",{"range":"114","text":"115"},[586,588],"[navigation]",[623,625],[731,744],"[navigation, refreshList]"]